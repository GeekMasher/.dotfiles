#!/bin/bash

# Languages

## Python
if [ -x "$(command -v python)" ]; then
    alias python="python3"
    alias freeze="pip freeze > requirements.txt"
    alias pyinstall="python ./setup.py install"
fi

## GOLANG
# > https://golang.org/doc/code.html#GOPATH
if [ -x "$(command -v go)" ]; then
    alias go.here="export GOPATH=$(pwd) && export PATH=$PATH:$(go env GOPATH)/bin"
    go.create() {
        if [ -z "$GOUSER" ]; then
            # use git's username
            GOUSER=$(git config --global user.name)
        fi
        # create project + path
        PROJ=$GOPATH/src/github.com/$GOUSER/$1
        mkdir -p $PROJ && cd $PROJ
        # create git repo
        git init
        # go to workspace
        cd $GOPATH
    }
fi

## JavaScript
if [ -x "$(command -v node)" ]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi


# Tools/Applications

## Git
if [ -x "$(command -v git)" ]; then
    function git.ignore() {
        # This function creates a `.gitignore` file using gitignore.io
        if [ $# -eq 0 ]; then
            echo "No arguments supplied"
        else
            echo "Using gitignore.io ..."
            LANGS=$@
            curl -L -s https://www.gitignore.io/api/${LANGS// /,} > ./.gitignore
        fi
    }
fi

## Docker
if [ -x "$(command -v docker)" ]; then
    alias docker.shell="docker exec -it $1 bash"
fi
